{
  "name": "command-line-args",
  "version": "1.0.0-3",
  "description": "Command-line parser, usage text producer",
  "repository": {
    "type": "git",
    "url": "https://github.com/75lb/command-line-args.git"
  },
  "main": "lib/command-line-args",
  "cla": "bin.cli.js",
  "scripts": {
    "test": "tape test/*.js",
    "docs": "jsdoc2md -t jsdoc2md/README.hbs lib/*.js > README.md; echo"
  },
  "keywords": [
    "argv",
    "parse",
    "argument",
    "args",
    "option",
    "parser",
    "parsing",
    "cli",
    "command"
  ],
  "author": {
    "name": "Lloyd Brookes"
  },
  "license": "MIT",
  "devDependencies": {
    "jsdoc-to-markdown": "^1.1.1",
    "tape": "^4"
  },
  "dependencies": {
    "array-tools": "^2",
    "command-line-usage": "^1",
    "find-replace": "^1",
    "object-tools": "^2",
    "typical": "^2.3.0"
  },
  "readme": "[![view on npm](http://img.shields.io/npm/v/command-line-args.svg)](https://www.npmjs.org/package/command-line-args)\n[![npm module downloads per month](http://img.shields.io/npm/dm/command-line-args.svg)](https://www.npmjs.org/package/command-line-args)\n[![Build Status](https://travis-ci.org/75lb/command-line-args.svg?branch=rewrite)](https://travis-ci.org/75lb/command-line-args)\n[![Dependency Status](https://david-dm.org/75lb/command-line-args.svg)](https://david-dm.org/75lb/command-line-args)\n\n# command-line-args\nCollect command-line options, generate a usage guide..\n\n- Support most option notation styles\n    - long options (`--find lib.js`)\n    - short options (`-f lib.js`)\n    - getopt-style combinations (`-xvf  lib.js`)\n    - option=val style (`--find=lib.js`)\n- Customisable usage guide generator\n- Modular - define reusage option sets.\n- Split options into groups, for apps with a large set of options.\n- Fine control over validation, type\n\n## Install\n```sh\n$ npm install command-line-args --save\n```\n\n\n# API Reference\n## Modules\n<dl>\n<dt><a href=\"#module_command-line-args\">command-line-args</a></dt>\n<dd></dd>\n<dt><a href=\"#module_definition\">definition</a></dt>\n<dd></dd>\n<dt><a href=\"#module_definitions\">definitions</a></dt>\n<dd></dd>\n<dt><a href=\"#module_option\">option</a></dt>\n<dd></dd>\n</dl>\n<a name=\"module_command-line-args\"></a>\n## command-line-args\n<a name=\"exp_module_command-line-args--CliArgs\"></a>\n### CliArgs(definitions, argv) ⇒ <code>object</code> ⏏\n**Kind**: Exported function  \n\n| Param | Type |\n| --- | --- |\n| definitions | <code>module:command-line-args.argDefType</code> | \n| argv | <code>Array.&lt;string&gt;</code> | \n\n<a name=\"module_definition\"></a>\n## definition\n\n* [definition](#module_definition)\n  * [Definition](#exp_module_definition--Definition) ⏏\n    * [.name](#module_definition--Definition+name) : <code>string</code>\n    * [.type](#module_definition--Definition+type) : <code>function</code>\n    * [.description](#module_definition--Definition+description) : <code>string</code>\n    * [.alias](#module_definition--Definition+alias) : <code>string</code>\n    * [.multiple](#module_definition--Definition+multiple) : <code>boolean</code>\n    * [.defaultOption](#module_definition--Definition+defaultOption) : <code>boolean</code>\n    * [.group](#module_definition--Definition+group) : <code>string</code> &#124; <code>Array.&lt;string&gt;</code>\n    * [.value](#module_definition--Definition+value) : <code>boolean</code>\n\n<a name=\"exp_module_definition--Definition\"></a>\n### Definition ⏏\nOption Definition\n\n**Kind**: Exported class  \n<a name=\"module_definition--Definition+name\"></a>\n#### definition.name : <code>string</code>\n**Kind**: instance property of <code>[Definition](#exp_module_definition--Definition)</code>  \n<a name=\"module_definition--Definition+type\"></a>\n#### definition.type : <code>function</code>\n**Kind**: instance property of <code>[Definition](#exp_module_definition--Definition)</code>  \n<a name=\"module_definition--Definition+description\"></a>\n#### definition.description : <code>string</code>\n**Kind**: instance property of <code>[Definition](#exp_module_definition--Definition)</code>  \n<a name=\"module_definition--Definition+alias\"></a>\n#### definition.alias : <code>string</code>\na single character\n\n**Kind**: instance property of <code>[Definition](#exp_module_definition--Definition)</code>  \n<a name=\"module_definition--Definition+multiple\"></a>\n#### definition.multiple : <code>boolean</code>\n**Kind**: instance property of <code>[Definition](#exp_module_definition--Definition)</code>  \n<a name=\"module_definition--Definition+defaultOption\"></a>\n#### definition.defaultOption : <code>boolean</code>\n**Kind**: instance property of <code>[Definition](#exp_module_definition--Definition)</code>  \n<a name=\"module_definition--Definition+group\"></a>\n#### definition.group : <code>string</code> &#124; <code>Array.&lt;string&gt;</code>\n**Kind**: instance property of <code>[Definition](#exp_module_definition--Definition)</code>  \n<a name=\"module_definition--Definition+value\"></a>\n#### definition.value : <code>boolean</code>\n**Kind**: instance property of <code>[Definition](#exp_module_definition--Definition)</code>  \n<a name=\"module_definitions\"></a>\n## definitions\n<a name=\"module_option\"></a>\n## option\n* * *\n\n&copy; 2015 Lloyd Brookes \\<75pound@gmail.com\\>. Documented by [jsdoc-to-markdown](https://github.com/75lb/jsdoc-to-markdown).\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/75lb/command-line-args/issues"
  },
  "homepage": "https://github.com/75lb/command-line-args",
  "_id": "command-line-args@1.0.0-3",
  "_shasum": "d30936a13d073674d4334abb14b0b16ff50e9637",
  "_from": "command-line-args@^1.0.0-0",
  "_resolved": "https://registry.npmjs.org/command-line-args/-/command-line-args-1.0.0-3.tgz"
}
