{
  "name": "file-set",
  "version": "0.2.7",
  "description": "Expands file patterns, returning the matched and unmatched files and directories.",
  "main": "lib/file-set.js",
  "repository": {
    "type": "git",
    "url": "https://github.com/75lb/file-set"
  },
  "scripts": {
    "test": "tape test/*.js",
    "docs": "jsdoc2md -t jsdoc2md/README.hbs lib/file-set.js > README.md; echo "
  },
  "author": {
    "name": "Lloyd Brookes"
  },
  "devDependencies": {
    "tape": "^4"
  },
  "dependencies": {
    "array-tools": "^1.0.4",
    "glob": "^4"
  },
  "readme": "[![view on npm](http://img.shields.io/npm/v/file-set.svg)](https://www.npmjs.org/package/file-set)\n[![npm module downloads per month](http://img.shields.io/npm/dm/file-set.svg)](https://www.npmjs.org/package/file-set)\n[![Build Status](https://travis-ci.org/75lb/file-set.svg?branch=master)](https://travis-ci.org/75lb/file-set)\n[![Dependency Status](https://david-dm.org/75lb/file-set.svg)](https://david-dm.org/75lb/file-set)\n\n# file-set\nExports a contructor taking a list of file patterns as input, returning a `file-set` instance containing the expanded patterns split into separate lists of `files`, `dirs` and `notExisting`.\n\n**Example**  \n```js\nvar fileSet = require(\"file-set\");\n```\n\n\n## Install\n```sh\n$ npm install file-set --save\n```\n\n## Usage\n```js\n> var fileSet = require(\"file-set\");\n> var ls = fileSet([ \"*\", \"not/existing/*\" ])\n{ list:\n   [ { path: 'README.md', type: 1 },\n     { path: 'jsdoc2md', type: 2 },\n     { path: 'lib', type: 2 },\n     { path: 'node_modules', type: 2 },\n     { path: 'package.json', type: 1 },\n     { path: 'test', type: 2 },\n     { path: 'not/existing/*', type: 0 } ],\n  files: [ 'README.md', 'package.json' ],\n  dirs:\n   [ 'jsdoc2md',\n     'lib',\n     'node_modules',\n     'test' ],\n  notExisting: [ 'not/existing/*' ] }\n```\n\n# API\nExports a contructor taking a list of file patterns as input, returning a `file-set` instance containing the expanded patterns split into separate lists of `files`, `dirs` and `notExisting`.\n\n**Example**  \n```js\nvar fileSet = require(\"file-set\");\n```\n\n* [file-set](#module_file-set)\n  * [FileSet](#exp_module_file-set--FileSet) ⏏\n    * [new FileSet(patternList)](#new_module_file-set--FileSet_new)\n    * _instance_\n      * [.list](#module_file-set--FileSet#list) : <code>Array.&lt;string&gt;</code>\n      * [.files](#module_file-set--FileSet#files) : <code>Array.&lt;string&gt;</code>\n      * [.dirs](#module_file-set--FileSet#dirs) : <code>Array.&lt;string&gt;</code>\n      * [.notExisting](#module_file-set--FileSet#notExisting) : <code>Array.&lt;string&gt;</code>\n      * [.add(files)](#module_file-set--FileSet#add)\n    * _static_\n      * [.eFileType](#module_file-set--FileSet.eFileType) : <code>enum</code>\n\n<a name=\"exp_module_file-set--FileSet\"></a>\n### FileSet ⏏\nExpands file patterns, returning the matched and unmatched files and directories\n\n**Kind**: Exported class  \n<a name=\"new_module_file-set--FileSet_new\"></a>\n#### new FileSet(patternList)\n\n| Param | Type | Description |\n| --- | --- | --- |\n| patternList | <code>string</code> &#124; <code>Array.&lt;string&gt;</code> | A pattern, or array of patterns to expand |\n\n<a name=\"module_file-set--FileSet#list\"></a>\n#### fileSet.list : <code>Array.&lt;string&gt;</code>\nThe full list of unique paths found, and not found.\n\n**Kind**: instance property of <code>[FileSet](#exp_module_file-set--FileSet)</code>  \n<a name=\"module_file-set--FileSet#files\"></a>\n#### fileSet.files : <code>Array.&lt;string&gt;</code>\nThe existing files found\n\n**Kind**: instance property of <code>[FileSet](#exp_module_file-set--FileSet)</code>  \n<a name=\"module_file-set--FileSet#dirs\"></a>\n#### fileSet.dirs : <code>Array.&lt;string&gt;</code>\nThe existing directories found\n\n**Kind**: instance property of <code>[FileSet](#exp_module_file-set--FileSet)</code>  \n<a name=\"module_file-set--FileSet#notExisting\"></a>\n#### fileSet.notExisting : <code>Array.&lt;string&gt;</code>\nPaths which were not found\n\n**Kind**: instance property of <code>[FileSet](#exp_module_file-set--FileSet)</code>  \n<a name=\"module_file-set--FileSet#add\"></a>\n#### fileSet.add(files)\nadd file patterns to the set\n\n**Kind**: instance method of <code>[FileSet](#exp_module_file-set--FileSet)</code>  \n\n| Param | Type | Description |\n| --- | --- | --- |\n| files | <code>string</code> &#124; <code>Array.&lt;string&gt;</code> | A pattern, or array of patterns to expand |\n\n<a name=\"module_file-set--FileSet.eFileType\"></a>\n#### FileSet.eFileType : <code>enum</code>\nEnum for the `type` value of each record in `fileSet.list`\n\n**Kind**: static enum property of <code>[FileSet](#exp_module_file-set--FileSet)</code>  \n**Read only**: true  \n**Properties**\n\n| Name | Type | Default | Description |\n| --- | --- | --- | --- |\n| NOEXIST | <code>number</code> | <code>0</code> | when a file doesn't exist |\n| FILE | <code>number</code> | <code>1</code> | It's a file |\n| DIR | <code>number</code> | <code>2</code> |  |\n\n\n* * *\n\n&copy; 2015 Lloyd Brookes \\<75pound@gmail.com\\>. Documented by [jsdoc-to-markdown](https://github.com/jsdoc2md/jsdoc-to-markdown).\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/75lb/file-set/issues"
  },
  "homepage": "https://github.com/75lb/file-set",
  "_id": "file-set@0.2.7",
  "_shasum": "519b3110ae06bc2ba8b29a3d75c0f3b81d485592",
  "_from": "file-set@~0.2.0",
  "_resolved": "https://registry.npmjs.org/file-set/-/file-set-0.2.7.tgz"
}
